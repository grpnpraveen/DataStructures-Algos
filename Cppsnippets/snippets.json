{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
  "file handling custom snippet": {
    "prefix": "fileh",
    "body": [
      "#include<iostream>",
      "#include <algorithm>",
      "#include<sstream>",
      "#include<iomanip>",
      "#include<math.h>",
      "#include<string>   // it has getline(cin,var)",
      "#include<sstream>",
      "//stl containers",
      "#include<array>",
      "#include<vector>",
      "#include<stack>",
      "#include<queue>",
      "#include<deque>",
      "#include<map>",
      "#include<unordered_map>",
      "#include<set>",
      "#include<unordered_set>",
      "#include<list>",
      "#include<forward_list>",
      "// #include<thread>",
      "// #include<chrono>",
      "#include<any>",
      "#define to_Str(X) #X",
      "#define glue(a,b) a##b  // ",
      "// #include<bits/stdc++.h>    # not working in msvc",
      "",
      "",
      "using namespace std;",
      "",
      "",
      "int main(int argc,char** argv[])",
      "{",
      "ios_base::sync_with_stdio(false);",
      "cin.tie(NULL);",
      "",
      "",
      "// reads ",
      "string x;",
      "freopen(\"${1: output}.txt\",\"r\",stdin);",
      "while(x!=\"${2: 00 }\")",
      "{",
      "",
      "    getline(cin, x);",
      "",
      "    if(x!=\"${3: 00 }\")",
      "        cout << x<<\"\\n\"; ",
      "}",
      "fclose(stdin);",
      "",
      "//appends",
      "// freopen(\"sample.txt\",\"a\",stdout);",
      "",
      "//writes",
      "// freopen(\"output.txt\",\"a\",stdout);",
      "// cout<<\"praveen\\n\";",
      "// cout<<\"are you\\n\";",
      "// cout<<\"ok?\\n\";",
      "// cout<<\"00\";",
      "// fclose(stdout);",
      "",
      "return 0;",
      "}",
      ""
    ],
    "description": "file handling custom snippet"
  },
"dsa default custom snippet": {
  "prefix": "dsa",
  "body": [
    "#define _USE_MATH_DEFINES ",
    "#include<iostream>",
    "#include <algorithm>",
    "#include<sstream>",
    "#include<iomanip>",
    "#include<cmath>",
    "#include<string>   // it has getline(cin,var)",
    "#include<sstream>",
    "//stl containers",
    "#include<array>",
    "#include<vector>",
    "#include<stack>",
    "#include<queue>",
    "#include<deque>",
    "#include<map>",
    "#include<unordered_map>",
    "#include<set>",
    "#include<unordered_set>",
    "#include<list>",
    "#include<forward_list>",
    "// #include<thread>",
    "// #include<chrono>",
    "#include<any>",
    "#define to_Str(X) #X",
    "#define glue(a,b) a##b  // ",
    "// #include<bits/stdc++.h>    # not working in msvc",
    "",
    "",
    "using namespace std;",
    "",
    "",
    "int main(int argc,char** argv[])",
    "{",
    "    ",
    "    ios_base::sync_with_stdio(false);",
    "    cin.tie(NULL);",
    "    int T;",
    "    freopen(\"input.txt\",\"r\",stdin);",
    "    cin>>T;",
    "    while(T--)",
    "    {",
    "        ${1:    // logic}",
    "",
    "",
    "    };",
    "    cout<<\"\\n\";",
    "    fclose(stdin);",
    "    return 0 ;",
    "}"
  ],
  "description": "dsa default custom snippet"
},
"cpp custom snippet": {
  "prefix": "cpp",
  "body": [
    "#include<iostream>",
    "using namespace std;",
    "",
    "int main()",
    "{",
    "",
    "",
    "    ${1: //code}",
    "",
    "    cout<<\"\\n\";",
    "    return 0;",
    "}"
  ],
  "description": "cpp custom snippet"
},
"testing custom snippet": {
  "prefix": "test",
  "body": [
    "#define _USE_MATH_DEFINES ",
    "#include<iostream>",
    "#include <algorithm>",
    "#include<sstream>",
    "#include<iomanip>",
    "#include<cmath>",
    "#include<string>   // it has getline(cin,var)",
    "#include<sstream>",
    "//stl containers",
    "#include<array>",
    "#include<vector>",
    "#include<stack>",
    "#include<queue>",
    "#include<deque>",
    "#include<map>",
    "#include<unordered_map>",
    "#include<set>",
    "#include<unordered_set>",
    "#include<list>",
    "#include<forward_list>",
    "// #include<thread>",
    "// #include<chrono>",
    "#include<any>",
    "#define to_Str(X) #X",
    "#define glue(a,b) a##b  // ",
    "// #include<bits/stdc++.h>    # not working in msvc",
    "",
    "",
    "using namespace std;",
    "",
    "",
    "int main(int argc,char** argv[])",
    "{",
    "",
    "   ${1:  //test}",
    "    ",
    "    cout<<\"\\n\";",
    "    return 0 ;",
    "}"
  ],
  "description": "testing custom snippet"
},
"real dsa default custom snippet": {
  "prefix": "realdsa",
  "body": [
    "#include<bits/stdc++.h>",
    "",
    "using namespace std;",
    "",
    "int main(int argc,char** argv[])",
    "{",
    "    ",
    "    ios_base::sync_with_stdio(false);",
    "    cin.tie(NULL);",
    "    int T;",
    "    freopen(\"input.txt\",\"r\",stdin);",
    "    cin>>T;",
    "    while(T--)",
    "    {",
    "        ${1:    // logic}",
    "",
    "",
    "    };",
    "    cout<<\"\\n\";",
    "    fclose(stdin);",
    "    return 0 ;",
    "}"
  ],
  "description": "real dsa default custom snippet"
},
"only headers dsa default custom snippet": {
  "prefix": "headersonly",
  "body": [
    "#define _USE_MATH_DEFINES ",
    "#include<iostream>",
    "#include <algorithm>",
    "#include<sstream>",
    "#include<iomanip>",
    "#include<cmath>",
    "#include<string>   // it has getline(cin,var)",
    "#include<sstream>",
    "//stl containers",
    "#include<array>",
    "#include<vector>",
    "#include<stack>",
    "#include<queue>",
    "#include<deque>",
    "#include<map>",
    "#include<unordered_map>",
    "#include<set>",
    "#include<unordered_set>",
    "#include<list>",
    "#include<forward_list>",
    "// #include<thread>",
    "// #include<chrono>",
    "#include<any>",
    "#define to_Str(X) #X",
    "#define glue(a,b) a##b  // ",
    "// #include<bits/stdc++.h>    # not working in msvc",

  ],
  "description": "only headers real dsa default custom snippet"
}
}